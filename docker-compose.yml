version: '3.8'

services:
  claude-discord:
    build: .
    image: claude-discord-bridge:latest
    container_name: claude-discord-bot
    restart: unless-stopped
    
    # Environment variables
    env_file:
      - .env
    
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/sessions.db
      - LOG_DIR=/app/logs
      - BACKUP_DIR=/app/backups
      - SANDBOX_PATH=/app/sandbox
    
    # Volume mounts for persistence
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./sandbox:/app/sandbox
      - ./.claude/agents:/app/.claude/agents
      # Optional: Mount local projects directory
      # - ~/projects:/projects:ro
    
    # Port mapping for webhook server
    ports:
      - "3000:3000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    
    # Network configuration
    networks:
      - claude-network
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching
  redis:
    image: redis:7-alpine
    container_name: claude-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - claude-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Optional: Add Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: claude-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - claude-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: claude-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    networks:
      - claude-network
    profiles:
      - monitoring

networks:
  claude-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: